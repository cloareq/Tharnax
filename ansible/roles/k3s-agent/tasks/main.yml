---
# Tasks for installing K3s on worker nodes

- name: Check if K3s is already installed
  stat:
    path: /usr/local/bin/k3s
  register: k3s_binary

- name: Check if K3s agent is running
  shell: "systemctl is-active k3s-agent.service || echo 'not-running'"
  register: k3s_agent_service_status
  changed_when: false
  failed_when: false

- name: Get facts from master node
  set_fact:
    k3s_token: "{{ hostvars[groups['master'][0]]['k3s_token'] }}"
    master_ip: "{{ hostvars[groups['master'][0]]['master_ip'] }}"

- name: Ensure token and master IP are available
  debug:
    msg: "Installing K3s agent connecting to {{ master_ip }} with token {{ k3s_token[:5] }}..."

- name: Install K3s as agent (worker)
  shell: >
    curl -sfL https://get.k3s.io | 
    K3S_URL=https://{{ master_ip }}:6443 
    K3S_TOKEN={{ k3s_token }} 
    sh -s -
  register: k3s_agent_install
  async: 600
  poll: 15
  when: not k3s_binary.stat.exists or k3s_agent_service_status.stdout == 'not-running'

- name: Display K3s agent installation result
  debug:
    var: k3s_agent_install
  when: k3s_agent_install is defined and k3s_agent_install.changed

- name: Wait for agent to register with server
  wait_for:
    path: /var/lib/rancher/k3s/agent/kubelet.kubeconfig
    state: present
    delay: 5
    timeout: 60
  ignore_errors: true

- name: Verify K3s agent service status
  shell: "systemctl status k3s-agent.service"
  register: agent_status
  changed_when: false
  failed_when: false
  ignore_errors: true

- name: Show agent status
  debug:
    var: agent_status.stdout_lines
  when: agent_status is defined 
